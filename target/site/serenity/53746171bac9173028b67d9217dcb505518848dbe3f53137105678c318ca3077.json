{"name":"Get all available pets, create a new pet and update its status to sold and then delete it","id":"get--create--update-and-delete-pets-using-apis;get-all-available-pets--create-a-new-pet-and-update-its-status-to-sold-and-then-delete-it","testSteps":[{"number":1,"description":"Example: {PetName\u003dPetAddedByRatika}","duration":10327,"startTime":"2020-11-18T01:11:26.381+05:30[Asia/Calcutta]","result":"SUCCESS","precondition":false,"level":0,"lineNumber":22,"children":[{"number":2,"description":"Given User makes a GET request to get all the pets with \"avaialble\" status","duration":4531,"startTime":"2020-11-18T01:11:26.391+05:30[Asia/Calcutta]","result":"SUCCESS","precondition":false,"level":1},{"number":3,"description":"And User verify that pet \"PetAddedByRatika\" is not in \"available\" pets list","duration":2,"startTime":"2020-11-18T01:11:30.924+05:30[Asia/Calcutta]","result":"SUCCESS","precondition":false,"level":1},{"number":4,"description":"When User makes a POST request to add a new pet \"PetAddedByRatika\"","duration":14,"startTime":"2020-11-18T01:11:30.927+05:30[Asia/Calcutta]","result":"SUCCESS","precondition":false,"level":1},{"number":5,"description":"Then User verify that pet \"PetAddedByRatika\" is in \"available\" pets list","duration":2,"startTime":"2020-11-18T01:11:30.942+05:30[Asia/Calcutta]","result":"SUCCESS","precondition":false,"level":1},{"number":6,"description":"And User makes a PUT request to update status of pet \"PetAddedByRatika\" to \"sold\"","duration":11,"startTime":"2020-11-18T01:11:30.945+05:30[Asia/Calcutta]","result":"SUCCESS","precondition":false,"level":1},{"number":7,"description":"And User makes a GET request to get all the pets with \"avaialble\" status","duration":1421,"startTime":"2020-11-18T01:11:30.957+05:30[Asia/Calcutta]","result":"SUCCESS","precondition":false,"level":1},{"number":8,"description":"Then User verify that pet \"PetAddedByRatika\" is not in \"available\" pets list","duration":2,"startTime":"2020-11-18T01:11:32.379+05:30[Asia/Calcutta]","result":"SUCCESS","precondition":false,"level":1},{"number":9,"description":"And User makes a GET request to get all the pets with \"sold\" status","duration":1417,"startTime":"2020-11-18T01:11:32.382+05:30[Asia/Calcutta]","result":"SUCCESS","precondition":false,"level":1},{"number":10,"description":"And User verify that pet \"PetAddedByRatika\" is in \"sold\" pets list","duration":2,"startTime":"2020-11-18T01:11:33.799+05:30[Asia/Calcutta]","result":"SUCCESS","precondition":false,"level":1},{"number":11,"description":"When User makes a DELETE request to delete the pet \"PetAddedByRatika\"","duration":10,"startTime":"2020-11-18T01:11:33.801+05:30[Asia/Calcutta]","result":"SUCCESS","precondition":false,"level":1},{"number":12,"description":"And User makes a GET request to get all the pets with \"avaialble\" status","duration":1460,"startTime":"2020-11-18T01:11:33.812+05:30[Asia/Calcutta]","result":"SUCCESS","precondition":false,"level":1},{"number":13,"description":"Then User verify that pet \"PetAddedByRatika\" is not in \"available\" pets list","duration":2,"startTime":"2020-11-18T01:11:35.273+05:30[Asia/Calcutta]","result":"SUCCESS","precondition":false,"level":1},{"number":14,"description":"And User makes a GET request to get all the pets with \"sold\" status","duration":1428,"startTime":"2020-11-18T01:11:35.276+05:30[Asia/Calcutta]","result":"SUCCESS","precondition":false,"level":1},{"number":15,"description":"And User verify that pet \"PetAddedByRatika\" is not in \"sold\" pets list","duration":1,"startTime":"2020-11-18T01:11:36.704+05:30[Asia/Calcutta]","result":"SUCCESS","precondition":false,"level":1}]}],"userStory":{"id":"get--create--update-and-delete-pets-using-apis","storyName":"Get, Create, update and delete Pets using APIs","path":"file:///D:/Ratika/Previous%20Workspaces/non-regression5/AdidasAPIWebAssignment/src/test/resources/features/PetsCRUD.feature","type":"feature"},"featureTag":{"name":"Features/Get, Create, update and delete Pets using APIs","type":"feature","displayName":"Features/Get, Create, update and delete Pets using APIs"},"title":"Get all available pets, create a new pet and update its status to sold and then delete it","tags":[{"name":"api","type":"tag","displayName":"api"}],"startTime":"2020-11-18T01:11:26.238+05:30[Asia/Calcutta]","duration":10471,"projectKey":"","isManualTestingUpToDate":false,"dataTable":{"headers":["PetName"],"rows":[{"values":["PetAddedByRatika"],"lineNumber":22,"result":"SUCCESS"}],"predefinedRows":true,"scenarioOutline":"Given User makes a GET request to get all the pets with \"avaialble\" status\n\rAnd User verify that pet \"\u003cPetName\u003e\" is not in \"available\" pets list\n\rWhen User makes a POST request to add a new pet \"\u003cPetName\u003e\"\n\rThen User verify that pet \"\u003cPetName\u003e\" is in \"available\" pets list\n\rAnd User makes a PUT request to update status of pet \"\u003cPetName\u003e\" to \"sold\"\n\rAnd User makes a GET request to get all the pets with \"avaialble\" status\n\rThen User verify that pet \"\u003cPetName\u003e\" is not in \"available\" pets list\n\rAnd User makes a GET request to get all the pets with \"sold\" status\n\rAnd User verify that pet \"\u003cPetName\u003e\" is in \"sold\" pets list\n\rWhen User makes a DELETE request to delete the pet \"\u003cPetName\u003e\"\n\rAnd User makes a GET request to get all the pets with \"avaialble\" status\n\rThen User verify that pet \"\u003cPetName\u003e\" is not in \"available\" pets list\n\rAnd User makes a GET request to get all the pets with \"sold\" status\n\rAnd User verify that pet \"\u003cPetName\u003e\" is not in \"sold\" pets list\n\r","dataSetDescriptors":[{"startRow":0,"rowCount":0,"name":""}]},"manual":false,"testSource":"Cucumber","result":"SUCCESS","scenarioOutline":"Given User makes a GET request to get all the pets with \"avaialble\" status\r\nAnd User verify that pet \"\u003cPetName\u003e\" is not in \"available\" pets list\r\nWhen User makes a POST request to add a new pet \"\u003cPetName\u003e\"\r\nThen User verify that pet \"\u003cPetName\u003e\" is in \"available\" pets list\r\nAnd User makes a PUT request to update status of pet \"\u003cPetName\u003e\" to \"sold\"\r\nAnd User makes a GET request to get all the pets with \"avaialble\" status\r\nThen User verify that pet \"\u003cPetName\u003e\" is not in \"available\" pets list\r\nAnd User makes a GET request to get all the pets with \"sold\" status\r\nAnd User verify that pet \"\u003cPetName\u003e\" is in \"sold\" pets list\r\nWhen User makes a DELETE request to delete the pet \"\u003cPetName\u003e\"\r\nAnd User makes a GET request to get all the pets with \"avaialble\" status\r\nThen User verify that pet \"\u003cPetName\u003e\" is not in \"available\" pets list\r\nAnd User makes a GET request to get all the pets with \"sold\" status\r\nAnd User verify that pet \"\u003cPetName\u003e\" is not in \"sold\" pets list"}